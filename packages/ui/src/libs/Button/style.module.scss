@use "../../styles/mixins" as *;

@function shadow_level($level) {
  @if $level == "none" {
    @return none;
  }

  @if $level == "low" {
    // @apply shadow-sm hover:(shadow-sm);
    @return 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  }

  @if $level == "medium" {
    // @apply shadow-md hover:(shadow-md);
    @return 0 2px 4px 0 rgba(0, 0, 0, 0.1);
  }

  @if $level == "high" {
    // @apply shadow-lg hover:(shadow-lg);
    @return 0 4px 8px 0 rgba(255, 255, 255, 0.1);
  }

  @return none;
}

@mixin border_hover($color) {
  &:hover {
    border-color: var(#{$color});
    box-shadow:
      inset 0 0 0 1px var(#{$color}),
      var(--un-shadow);
    // shadow_level("high");
  }

  $duration: 0.2s;

  transition:
    box-shadow $duration ease,
    border-color $duration ease,
    filter $duration ease,
    background-color $duration ease;
}

@mixin icon_hover($color) {
  &:hover {
    color: var(#{$color});
  }

  $duration: 0.2s;
  transition: color $duration ease;
}

@mixin border_none() {
  border: none;

  &:hover {
    border: none;
    box-shadow: none;
  }
}

@mixin indicator($color, $is_icon: false) {
  &::before {
    content: " ";
    position: absolute;
    left: 50%;
    right: 0;
    bottom: 6px;
    @if $is_icon {
      width: 10px;
    } @else {
      width: 20px;
    }
    transform: translate(-50%, 50%);
    height: 3px;
    border-radius: 100px;
    background-color: var(#{$color});

    transition: filter 0.2s ease;
  }

  &:hover::before {
    filter: drop-shadow(0 0 0.5rem var(#{$color}));
  }

  // Disabled styles
  &.disabled::before {
    background-color: var(--color-secondary);
  }

  &.disabled:hover::before {
    filter: none;
  }
}

.button {
  @include border_default();

  @apply rounded-lg;

  @include border_hover(--color-primary);

  &.success {
    $color: --color-success;
    @include border_hover($color);
    @include indicator($color);
  }

  &.danger {
    $color: --color-danger;
    @include border_hover($color);
    @include indicator($color);
  }

  &.warning {
    $color: --color-warning;
    @include border_hover($color);
    @include indicator($color);
  }
}

.button.icon {
  @include border_none();
  @include icon_hover(--color-primary);

  box-shadow: none;

  &.success {
    $color: --color-success;
    @include indicator($color, true);
    @include icon_hover($color);
  }

  &.danger {
    $color: --color-danger;
    @include indicator($color, true);
    @include icon_hover($color);
  }

  &.warning {
    $color: --color-warning;
    @include indicator($color, true);
    @include icon_hover($color);
  }

  &:global(.level-low) {
    @apply drop-shadow-sm;
    box-shadow: none;

    [data-theme="dark"] & {
      @apply drop-shadow-sm drop-shadow-color-white drop-shadow-color-opacity-10;
    }
  }

  &:global(.level-medium) {
    @apply drop-shadow-md;
    box-shadow: none;

    [data-theme="dark"] & {
      @apply drop-shadow-md drop-shadow-color-white drop-shadow-color-opacity-15;
    }
  }

  &:global(.level-high) {
    @apply drop-shadow-lg;
    box-shadow: none;

    [data-theme="dark"] & {
      @apply drop-shadow-lg drop-shadow-color-white drop-shadow-color-opacity-15;
    }
  }
}
